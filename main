import matplotlib.pyplot as plt
import numpy as np
import glob
import csv
import re
from datetime import date


class eunosatData:
    """ Simple EUNOSAT data object """

    def __init__(self):
        self.date = date.today()
        self.data = np.zeros([93, 160])
        self.scene_raster_width = 160

    def set_date(self, date):
        self.date = date

    def set_date_from_filename(self, filename):
        """ Creates datetime object from filename """
        filename = re.sub('\D', '', filename)
        self.date = self.date.replace(year  =int(filename[1:5]))
        self.date = self.date.replace(month =int(filename[5:7]))
        self.date = self.date.replace(day   =int(filename[7:9]))

    def set_data(self, data):
        self.data = data

    def set_data_from_csv_file(self, filename):
        """ Creates EUNOSAT 2-dimensional array from file """
        self.data = np.zeros([93, self.scene_raster_width])
        with open(filename) as csvfile:
            reader = csv.reader(csvfile, delimiter=',')
            row_index = 0
            for row in reader:
                column_index = 0
                for value in row:
                    value = 0 if value == 'NaN' else value
                    self.data[92-column_index, row_index] = value
                    column_index += 1
                row_index += 1

    def plot_data(self):
        """ Plots EUNOSAT data from the 2-dim dataset """
        plt.imshow(self.data)
        plt.colorbar()
        plt.title('Chlorophyll Distribution')
        plt.show()


def get_mussel_data(filename):
    """ Get mussel growth data (not interpolated) from csv file and returns list """
    mussel_growth_data = []
    with open(filename) as csvfile:
        reader = csv.reader(csvfile, delimiter='\t')
        for row in reader:
            mussel_growth_data.append([float(row[0]), float(row[1]), float(row[2])])
    return mussel_growth_data


def get_edulis_temperature_data(filename):
    """ Get temperatures (per day, already interpolated) from temperature csv file and returns list """
    edulis_temperatures = []
    with open(filename) as csvfile:
        reader = csv.reader(csvfile, delimiter='\t')
        for row in reader:
            edulis_temperatures.append(float(row[1]))
    return edulis_temperatures


def get_edulis_spm_data(filename):
    """ Get SPM (per day, not interpolated) from SPM csv file and returns list """
    edulis_spm_data = []
    with open(filename) as csvfile:
        reader = csv.reader(csvfile, delimiter='\t')
        for row in reader:
            edulis_spm_data.append([int(row[0]), float(row[1])])
    return edulis_spm_data


def get_deb_model_constants(filename):
    deb_constants = {}
    with open(filename) as csvfile:
        reader = csv.reader(csvfile, delimiter=',')
        for row in reader:
            deb_constants[str(row[0])] = row[1]
    return deb_constants


def main():
    # Get mussel data
    mussel_growth_data = get_mussel_data('DEB_mussel_growth_data.csv')

    # Get EDULIS temperature data
    edulis_temperature_list = get_edulis_temperature_data('EDULIS_temperature_data.csv')

    # Get EDULIS solid particle matter data
    edulis_spm_list = get_edulis_spm_data('EDULIS_SPM_data.csv')

    # Get DEB model constants
    deb_constants = get_deb_model_constants('DEB_model_constants.csv')

    # Get EUNOSAT chrolophyll data
    eunosat_data_list = []
    for filename in glob.glob('EUNOSAT_data/*.csv'):
        eunosat_data_list.append(eunosatData())
        eunosat_data_list[-1].set_date_from_filename(filename)
        eunosat_data_list[-1].set_data_from_csv_file(filename)
        plt.plot(eunosat_data_list[-1].data)

    # Plot EUNOSAT chrolophyll data
    for i in range(0, 16):
        plt.subplot(4, 4, i+1)
        plt.imshow(eunosat_data_list[i].data)
        plt.xlabel(str(eunosat_data_list[i].date))
        plt.xticks([])
        plt.yticks([])

    plt.suptitle('Chlorophyll Distribution')
    plt.tight_layout(True)
    plt.show()
    exit()


if __name__ == '__main__':
    main()
